AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  MqttHost:
    Description: 'Required. The AWS IoT Core MQTT Endpoint Host. i.e. xxxxxxxxxxxx-ats.iot.us-east-1.amazonaws.com'
    Type: 'String'
Resources:
  IoTSimulatorNotificationsSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "iot-simulator-notifications"

  IoTLoadSimulationFleetStatusDDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "iot-simulator-fleet-status"
      AttributeDefinitions:
        -
          AttributeName: "clientId"
          AttributeType: "S"
        -
          AttributeName: "deviceStatus"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "clientId"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      GlobalSecondaryIndexes:
        -
          IndexName: "deviceStatus-index"
          KeySchema:
            -
              AttributeName: "deviceStatus"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"

  IoTLoadSimulatorEngineLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "iot-simulator-engine"
      Handler: "engine-handler"
      Runtime: go1.x
      MemorySize: 256
      Timeout: 900
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt IoTSimulatorNotificationsSNSTopic.TopicName
      CodeUri: ../build/engine-handler.zip
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref IoTSimulatorNotificationsSNSTopic

  IoTLoadSimulatorWorkerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "iot-simulator-worker"
      Handler: "worker-handler"
      Runtime: go1.x
      MemorySize: 2048
      Timeout: 900
      Events:
        IoTSimulationRequestEvent:
          Type: SNS
          Properties:
            Topic: !Ref IoTSimulatorNotificationsSNSTopic
      CodeUri: ../build/worker-handler.zip
      Environment:
        Variables:
          MQTT_HOST: !Ref MqttHost

  IoTSimulatorFleetStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "iot-simulator-fleet-status"
      Handler: "index.handler"
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 5
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref IoTLoadSimulationFleetStatusDDBTable
      Events:
        IoTEventsPresenceRule:
          Type: IoTRule
          Properties:
            AwsIotSqlVersion: '2016-03-23'
            Sql: "select * FROM '$aws/events/presence/#'"
      CodeUri: src/node/function/iot-simulator-fleet-status/index.js
      Environment:
        Variables:
          DDB_TABLE_NAME: !Ref IoTLoadSimulationFleetStatusDDBTable

  IoTSimulatorCloudWatchDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: "aws-iot-simulator-dashboard"
      DashboardBody:
        Fn::Sub: '{
          "widgets": [
              {
                  "type": "metric",
                  "x": 0,
                  "y": 0,
                  "width": 9,
                  "height": 6,
                  "properties": {
                      "metrics": [
                          [ "AWS/IoT", "Connect.Success", "Protocol", "MQTT" ],
                          [ ".", "Connect.ClientError", ".", "." ],
                          [ ".", "Connect.Success", ".", "HTTP" ]
                      ],
                      "view": "singleValue",
                      "stacked": false,
                      "region": "us-east-1",
                      "title": "IoT Protocol",
                      "stat": "Sum",
                      "period": 300
                  }
              },
              {
                  "type": "metric",
                  "x": 9,
                  "y": 0,
                  "width": 12,
                  "height": 6,
                  "properties": {
                      "metrics": [
                          [ "AWS/IoT", "PublishIn.Success", "Protocol", "MQTT" ]
                      ],
                      "view": "timeSeries",
                      "stacked": false,
                      "region": "us-east-1",
                      "stat": "Sum",
                      "period": 1
                  }
              },
              {
                  "type": "metric",
                  "x": 9,
                  "y": 6,
                  "width": 6,
                  "height": 6,
                  "properties": {
                      "metrics": [
                          [ "AWS/IoT", "PublishIn.Throttle", "Protocol", "MQTT" ]
                      ],
                      "view": "timeSeries",
                      "stacked": false,
                      "region": "us-east-1",
                      "stat": "Sum",
                      "period": 300
                  }
              },
              {
                  "type": "metric",
                  "x": 0,
                  "y": 6,
                  "width": 9,
                  "height": 6,
                  "properties": {
                      "metrics": [
                          [ "AWS/IoT", "Connect.Throttle", "Protocol", "MQTT" ]
                      ],
                      "view": "singleValue",
                      "stacked": false,
                      "region": "us-east-1",
                      "stat": "Sum",
                      "period": 300
                  }
              },
              {
                  "type": "metric",
                  "x": 15,
                  "y": 6,
                  "width": 6,
                  "height": 6,
                  "properties": {
                      "metrics": [
                          [ "AWS/IoT", "PublishIn.ClientError", "Protocol", "MQTT" ]
                      ],
                      "view": "timeSeries",
                      "stacked": false,
                      "region": "us-east-1",
                      "period": 300,
                      "stat": "Sum"
                  }
              }
          ]
        }'
